-- Enable the UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE Role (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE Usuario (
    id_usuario UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    nomeCompleto VARCHAR(100) NOT NULL,
    cpf_cnpj VARCHAR(14)  UNIQUE,
    dataNascimento DATE,
    genero VARCHAR(20),
    telefone VARCHAR(15),
    email VARCHAR(100) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    categoria VARCHAR(50),
    fk_id_role INT,
    CONSTRAINT fk_role FOREIGN KEY (fk_id_role) REFERENCES Role(id) ON DELETE SET NULL
);

CREATE TABLE Endereco (
    id_endereco UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    cidade VARCHAR(50),
    latitude DECIMAL,
    longitude DECIMAL,
    rua VARCHAR(50),
    bairro VARCHAR(50),
    numero INT,
    complemento VARCHAR(50),
    estado VARCHAR(2),
    fk_id_usuario UUID REFERENCES Usuario(id_usuario) ON DELETE CASCADE,
    fk_id_embarcacao UUID REFERENCES Embarcacao(id_embarcacao)  

);

CREATE TABLE Marinheiro (
    id_marinheiro UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    nome VARCHAR(100) NOT NULL,
    categoria VARCHAR(45) NOT NULL,
    registromaritimo VARCHAR(50) UNIQUE,
    disponibilidade BOOLEAN,
    cpf_cnpj VARCHAR(11) NOT NULL UNIQUE,
    datanascimento DATE,
    genero VARCHAR(20),
    telefone VARCHAR(15),
    email VARCHAR(100) NOT NULL,
    fk_id_usuario UUID,
    CONSTRAINT fk_usuario FOREIGN KEY (fk_id_usuario) REFERENCES Usuario(id_usuario) ON DELETE CASCADE
);
CREATE TABLE Embarcacao (
    id_embarcacao UUID PRIMARY KEY, 
    nome VARCHAR(255) NOT NULL,
    anofabricacao INT NOT NULL,
    fabricante VARCHAR(255), 
    preco FLOAT NOT NULL, 
    potencia INT NOT NULL, 
    tamanho FLOAT, 
    capacidade INT, 
    categoria VARCHAR(255) NOT NULL, 
    regras VARCHAR(1000),
    descricao VARCHAR(1000), 
    enderecoembarque VARCHAR(255), 
    disponibilidade BOOLEAN, 
    pet BOOLEAN, 
    quantidadebanheiro INT , 
    quantidadecabines INT , 
    inscricao_IMO VARCHAR(20), 
    bandeira VARCHAR(50),
    fk_id_usuario UUID,
    fk_id_endereco UUID, 
    CONSTRAINT fk_usuario FOREIGN KEY (fk_id_usuario) REFERENCES Usuario(id_usuario) ON DELETE cascade,
    CONSTRAINT fk_endereco FOREIGN KEY (fk_id_endereco) REFERENCES Endereco(id_endereco) ON DELETE SET NULL
);

CREATE TABLE Pagamento (
    id_pagamento UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    banco VARCHAR(50),
    numeroCartao VARCHAR(50),
    metodoPagamento VARCHAR(50),
    valor DECIMAL,
    dataPagamento DATE
);


CREATE TABLE agendamento (
    id_agendamento UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    datainicio DATE NOT NULL,
    status VARCHAR(255),
    datafinal DATE,
    fk_id_usuario UUID,
    fk_id_marinheiro UUID,
    fk_id_embarcacao UUID,
    CONSTRAINT fk_usuario FOREIGN KEY (fk_id_usuario) REFERENCES usuario(id_usuario) ON DELETE CASCADE,
    CONSTRAINT fk_marinheiro FOREIGN KEY (fk_id_marinheiro) REFERENCES marinheiro(id_marinheiro) ON DELETE CASCADE,
    CONSTRAINT fk_embarcacao FOREIGN KEY (fk_id_embarcacao) REFERENCES embarcacao(id_embarcacao) ON DELETE CASCADE
);

-- Create the Avaliacao table
CREATE TABLE Avaliacao (
    id_avaliacao SERIAL PRIMARY KEY,
    comentario VARCHAR(255),
    notaMarinheiro INT,
    notaEmbarcacao INT,
    notaAgendamento INT,
    fk_id_usuario UUID REFERENCES Usuario(id_usuario) ON DELETE CASCADE,
    fk_id_agendamento UUID REFERENCES Agendamento(id_agendamento),
    fk_id_marinheiro UUID REFERENCES Marinheiro(id_marinheiro),
	fk_id_embarcacao UUID REFERENCES Embarcacao(id_embarcacao) ON DELETE CASCADE
);

-- Create the Documentos table
CREATE TABLE Documentos (
    id_documento UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    status VARCHAR(50),
    formato VARCHAR(50),
    fk_id_usuario UUID REFERENCES Usuario(id_usuario) ON DELETE CASCADE,
    documento BYTEA,
    nome VARCHAR(50)
);

-- Create the usuario_pagamento table
CREATE TABLE usuario_pagamento (
    id_usuario UUID REFERENCES Usuario(id_usuario) ON DELETE RESTRICT,
    id_pagamento UUID REFERENCES Pagamento(id_pagamento) ON DELETE SET NULL,
    PRIMARY KEY (id_usuario, id_pagamento)
);


-- Create the ContaBanco table
CREATE TABLE ContaBanco (
    id_conta SERIAL PRIMARY KEY,
    banco VARCHAR(50) NOT NULL,
    numeroConta VARCHAR(50) NOT NULL,
    agencia VARCHAR(20) NOT NULL,
    fk_id_usuario UUID REFERENCES Usuario(id_usuario) ON DELETE CASCADE
);


CREATE TABLE AprovacaoDocumento (
    id_aprovacao UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    fk_id_documento UUID REFERENCES Documentos(id_documento) ON DELETE CASCADE,
    status_aprovacao VARCHAR(50) CHECK (status_aprovacao IN ('Pendente', 'Aprovado', 'Rejeitado')),
    data_aprovacao DATE,
    observacoes VARCHAR(50),
    fk_id_usuario UUID REFERENCES Usuario(id_usuario) ON DELETE CASCADE
);

CREATE TABLE ImagemEmbarcacao (
    id_imagem SERIAL PRIMARY KEY,
    nome VARCHAR(255),
    imagem Bigint NOT NULL,
    fk_id_embarcacao UUID REFERENCES Embarcacao(id_embarcacao) ON DELETE CASCADE,
    formato VARCHAR(50)
);